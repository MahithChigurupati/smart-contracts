{
  "address": "0xb14bF49542DF38D076A5D6A4404d717cda191785",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_profiler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "RemoveProfile",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_profiler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "SetProfile",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getID",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "UID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "firstNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "lastNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dobHash",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "phone",
              "type": "bytes32"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Identity",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_profiler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "entity",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Profile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getSoul",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "UID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "firstNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "lastNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dobHash",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "phone",
              "type": "bytes32"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Identity",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_profiler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "hasProfile",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "hasSoul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "listProfiles",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "UID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "firstNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "lastNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dobHash",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "phone",
              "type": "bytes32"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Identity",
          "name": "_identityData",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_profiler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "entity",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Profile",
          "name": "_profileData",
          "type": "tuple"
        }
      ],
      "name": "setProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "UID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "firstNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "lastNameHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dobHash",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "phone",
              "type": "bytes32"
            }
          ],
          "internalType": "struct UNIVERSAL_ID.Identity",
          "name": "_identityData",
          "type": "tuple"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xebc648ad6baceb6cfb9254aa50ab7281c6c4aca1286064ac9e7beb1480a79ecb",
  "receipt": {
    "to": null,
    "from": "0x03fcDbb718cDDb25ab4c07D77e1511c5bbF5D126",
    "contractAddress": "0xb14bF49542DF38D076A5D6A4404d717cda191785",
    "transactionIndex": 40,
    "gasUsed": "1937555",
    "logsBloom": "0x
    "blockHash": "0x881b02edfd3039aad680e0db3e90db7715f5aa9e4cee922cd4df566d938b5f62",
    "transactionHash": "0xebc648ad6baceb6cfb9254aa50ab7281c6c4aca1286064ac9e7beb1480a79ecb",
    "logs": [
      {
        "transactionIndex": 40,
        "blockNumber": 4803781,
        "transactionHash": "0xebc648ad6baceb6cfb9254aa50ab7281c6c4aca1286064ac9e7beb1480a79ecb",
        "address": "0xb14bF49542DF38D076A5D6A4404d717cda191785",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000003fcdbb718cddb25ab4c07d77e1511c5bbf5d126"
        ],
        "data": "0x",
        "logIndex": 29,
        "blockHash": "0x881b02edfd3039aad680e0db3e90db7715f5aa9e4cee922cd4df566d938b5f62"
      }
    ],
    "blockNumber": 4803781,
    "cumulativeGasUsed": "6315640",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d17b2f5695a6696749d0c70e4497b5e5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_profiler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemoveProfile\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_profiler\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"SetProfile\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getID\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"UID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"firstNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dobHash\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"phone\",\"type\":\"bytes32\"}],\"internalType\":\"struct UNIVERSAL_ID.Identity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_profiler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"entity\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct UNIVERSAL_ID.Profile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSoul\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"UID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"firstNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dobHash\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"phone\",\"type\":\"bytes32\"}],\"internalType\":\"struct UNIVERSAL_ID.Identity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_profiler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasSoul\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"listProfiles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"UID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"firstNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dobHash\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"phone\",\"type\":\"bytes32\"}],\"internalType\":\"struct UNIVERSAL_ID.Identity\",\"name\":\"_identityData\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_profiler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"entity\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct UNIVERSAL_ID.Profile\",\"name\":\"_profileData\",\"type\":\"tuple\"}],\"name\":\"setProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"UID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"firstNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastNameHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dobHash\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"phone\",\"type\":\"bytes32\"}],\"internalType\":\"struct UNIVERSAL_ID.Identity\",\"name\":\"_identityData\",\"type\":\"tuple\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UNIVERSAL_ID.sol\":\"UNIVERSAL_ID\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"contracts/UNIVERSAL_ID.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract UNIVERSAL_ID is Ownable(msg.sender) {\\n    struct Identity {\\n        bytes32 UID;\\n        bytes32 firstNameHash; // keccak256 hash of name\\n        bytes32 lastNameHash; // keccak256 hash of name\\n        uint256 dobHash; // Poseidon hash of date of birth\\n        bytes32 phone;\\n    }\\n\\n    struct Profile {\\n        string entity;\\n        uint256 dataHash;\\n        uint256 timestamp;\\n    }\\n\\n    mapping(address => Identity) private identities;\\n    mapping(address => mapping(address => Profile)) identityProfiles;\\n    mapping(address => address[]) private profiles;\\n\\n    string public name;\\n    bytes32 private zeroHash = bytes32(0);\\n\\n    event Mint(address _user);\\n    event Burn(address _user);\\n    event Update(address _user);\\n    event SetProfile(address _profiler, address _user);\\n    event RemoveProfile(address _profiler, address _user);\\n\\n    function mint(address _user, Identity memory _identityData) external onlyOwner {\\n        require(identities[_user].UID == zeroHash, \\\"Soul already exists\\\");\\n        identities[_user] = _identityData;\\n        emit Mint(_user);\\n    }\\n\\n    function burn(address _user) external onlyOwner {\\n        delete identities[_user];\\n        for (uint256 i = 0; i < profiles[_user].length; i++) {\\n            address profiler = profiles[_user][i];\\n            delete identityProfiles[profiler][_user];\\n        }\\n        emit Burn(_user);\\n    }\\n\\n    function update(address _user, Identity memory _identityData) external {\\n        require(identities[_user].UID != zeroHash, \\\"Soul does not exist\\\");\\n        identities[_user] = _identityData;\\n        emit Update(_user);\\n    }\\n\\n    function hasSoul(address _user) external view returns (bool) {\\n        if (identities[_user].UID == zeroHash) {\\n            return false;\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    function getSoul(address _user) external view returns (Identity memory) {\\n        return identities[_user];\\n    }\\n\\n    // Profile functions\\n    function setProfile(address _user, Profile memory _profileData) external {\\n        require(identities[_user].UID != zeroHash, \\\"Cannot create a profile for a soul that has not been minted\\\");\\n        identityProfiles[msg.sender][_user] = _profileData;\\n        profiles[_user].push(msg.sender);\\n        emit SetProfile(msg.sender, _user);\\n    }\\n\\n    function getProfile(address _profiler, address _user) external view returns (Profile memory) {\\n        return identityProfiles[_profiler][_user];\\n    }\\n\\n    function listProfiles(address _user) external view returns (address[] memory) {\\n        return profiles[_user];\\n    }\\n\\n    function hasProfile(address _profiler, address _user) public view returns (bool) {\\n        if (keccak256(bytes(identityProfiles[_profiler][_user].entity)) == zeroHash) {\\n            return false;\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    function removeProfile(address _profiler, address _user) external {\\n        require(msg.sender == _user || msg.sender == _profiler, \\\"Only users have rights to delete their profile data\\\");\\n        require(hasProfile(_profiler, _user), \\\"Profile does not exist\\\");\\n        delete identityProfiles[_profiler][msg.sender];\\n        emit RemoveProfile(_profiler, _user);\\n    }\\n\\n    // Getters\\n    function getID(address _user) external view returns (Identity memory) {\\n        return identities[_user];\\n    }\\n}\\n\",\"keccak256\":\"0x920ffb7c69c33d0d58b42671b46a5d04efc3ea1b435f3951d85279e50750f253\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000801b6005553480156200001857600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200008f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000869190620001b0565b60405180910390fd5b620000a081620000a760201b60201c565b50620001cd565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000198826200016b565b9050919050565b620001aa816200018b565b82525050565b6000602082019050620001c760008301846200019f565b92915050565b61219480620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806389afcb4411610097578063bdd7520211610066578063bdd7520214610270578063d904176d146102a0578063f2fde38b146102bc578063f5a3317d146102d8576100f5565b806389afcb44146101d65780638da5cb5b146101f257806396367d4c1461021057806399f826a514610240576100f5565b806354588a93116100d357806354588a931461016457806366cfe97f14610180578063715018a6146101b057806386b75fd1146101ba576100f5565b806306fdde03146100fa57806330cff224146101185780634d1dd96914610148575b600080fd5b610102610308565b60405161010f919061139e565b60405180910390f35b610132600480360381019061012d9190611432565b610396565b60405161013f9190611525565b60405180910390f35b610162600480360381019061015d9190611732565b6104d3565b005b61017e60048036038101906101799190611850565b6106e0565b005b61019a60048036038101906101959190611890565b61081e565b6040516101a79190611934565b60405180910390f35b6101b86108a9565b005b6101d460048036038101906101cf9190611850565b6108bd565b005b6101f060048036038101906101eb9190611890565b6109f3565b005b6101fa610c20565b604051610207919061195e565b60405180910390f35b61022a60048036038101906102259190611890565b610c49565b6040516102379190611a37565b60405180910390f35b61025a60048036038101906102559190611890565b610d16565b6040516102679190611934565b60405180910390f35b61028a60048036038101906102859190611890565b610da1565b6040516102979190611a74565b60405180910390f35b6102ba60048036038101906102b59190611432565b610e01565b005b6102d660048036038101906102d19190611890565b610fca565b005b6102f260048036038101906102ed9190611432565b611050565b6040516102ff9190611a74565b60405180910390f35b6004805461031590611abe565b80601f016020809104026020016040519081016040528092919081815260200182805461034190611abe565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b505050505081565b61039e611255565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461043590611abe565b80601f016020809104026020016040519081016040528092919081815260200182805461046190611abe565b80156104ae5780601f10610483576101008083540402835291602001916104ae565b820191906000526020600020905b81548152906001019060200180831161049157829003601f168201915b5050505050815260200160018201548152602001600282015481525050905092915050565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090611b61565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816105eb9190611d2d565b506020820151816001015560408201518160020155905050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa23ac7e4240980962523625b2d1d3aa221354fcc90b374cf0e21685c94288d3e33836040516106d4929190611dff565b60405180910390a15050565b6106e8611102565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590611e74565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050507f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b056582604051610812919061195e565b60405180910390a15050565b610826611276565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6108b1611102565b6108bb6000611189565b565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90611ee0565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050507fd456720fd185d4060f5cea4d82775d2af95048c1e10f227ec35bae950a4be2a8826040516109e7919061195e565b60405180910390a15050565b6109fb611102565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160009055505060005b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610be5576000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b0557610b04611f00565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610bbf91906112b1565b600182016000905560028201600090555050508080610bdd90611f5e565b915050610a68565b507fe22de1457cb61fb61b60176bc4235a9abd19466126b46692bc14fc573f09924981604051610c15919061195e565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d0a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cc0575b50505050509050919050565b610d1e611276565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6000600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610df75760009050610dfc565b600190505b919050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6657508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c90612018565b60405180910390fd5b610eaf8282611050565b610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee590612084565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610f7b91906112b1565b6001820160009055600282016000905550507fbecbd0337c25e4ba3474143b6f75afd8775e682adad51f00d8f5b0740406fd338282604051610fbe929190611dff565b60405180910390a15050565b610fd2611102565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110445760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161103b919061195e565b60405180910390fd5b61104d81611189565b50565b6000600554600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040516110e19190612147565b6040518091039020036110f757600090506110fc565b600190505b92915050565b61110a61124d565b73ffffffffffffffffffffffffffffffffffffffff16611128610c20565b73ffffffffffffffffffffffffffffffffffffffff16146111875761114b61124d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161117e919061195e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180606001604052806060815260200160008152602001600081525090565b6040518060a0016040528060008019168152602001600080191681526020016000801916815260200160008152602001600080191681525090565b5080546112bd90611abe565b6000825580601f106112cf57506112ee565b601f0160209004906000526020600020908101906112ed91906112f1565b5b50565b5b8082111561130a5760008160009055506001016112f2565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561134857808201518184015260208101905061132d565b60008484015250505050565b6000601f19601f8301169050919050565b60006113708261130e565b61137a8185611319565b935061138a81856020860161132a565b61139381611354565b840191505092915050565b600060208201905081810360008301526113b88184611365565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113ff826113d4565b9050919050565b61140f816113f4565b811461141a57600080fd5b50565b60008135905061142c81611406565b92915050565b60008060408385031215611449576114486113ca565b5b60006114578582860161141d565b92505060206114688582860161141d565b9150509250929050565b600082825260208201905092915050565b600061148e8261130e565b6114988185611472565b93506114a881856020860161132a565b6114b181611354565b840191505092915050565b6000819050919050565b6114cf816114bc565b82525050565b600060608301600083015184820360008601526114f28282611483565b915050602083015161150760208601826114c6565b50604083015161151a60408601826114c6565b508091505092915050565b6000602082019050818103600083015261153f81846114d5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61158482611354565b810181811067ffffffffffffffff821117156115a3576115a261154c565b5b80604052505050565b60006115b66113c0565b90506115c2828261157b565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156115f1576115f061154c565b5b6115fa82611354565b9050602081019050919050565b82818337600083830152505050565b6000611629611624846115d6565b6115ac565b905082815260208101848484011115611645576116446115d1565b5b611650848285611607565b509392505050565b600082601f83011261166d5761166c6115cc565b5b813561167d848260208601611616565b91505092915050565b61168f816114bc565b811461169a57600080fd5b50565b6000813590506116ac81611686565b92915050565b6000606082840312156116c8576116c7611547565b5b6116d260606115ac565b9050600082013567ffffffffffffffff8111156116f2576116f16115c7565b5b6116fe84828501611658565b60008301525060206117128482850161169d565b60208301525060406117268482850161169d565b60408301525092915050565b60008060408385031215611749576117486113ca565b5b60006117578582860161141d565b925050602083013567ffffffffffffffff811115611778576117776113cf565b5b611784858286016116b2565b9150509250929050565b6000819050919050565b6117a18161178e565b81146117ac57600080fd5b50565b6000813590506117be81611798565b92915050565b600060a082840312156117da576117d9611547565b5b6117e460a06115ac565b905060006117f4848285016117af565b6000830152506020611808848285016117af565b602083015250604061181c848285016117af565b60408301525060606118308482850161169d565b6060830152506080611844848285016117af565b60808301525092915050565b60008060c08385031215611867576118666113ca565b5b60006118758582860161141d565b9250506020611886858286016117c4565b9150509250929050565b6000602082840312156118a6576118a56113ca565b5b60006118b48482850161141d565b91505092915050565b6118c68161178e565b82525050565b60a0820160008201516118e260008501826118bd565b5060208201516118f560208501826118bd565b50604082015161190860408501826118bd565b50606082015161191b60608501826114c6565b50608082015161192e60808501826118bd565b50505050565b600060a08201905061194960008301846118cc565b92915050565b611958816113f4565b82525050565b6000602082019050611973600083018461194f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119ae816113f4565b82525050565b60006119c083836119a5565b60208301905092915050565b6000602082019050919050565b60006119e482611979565b6119ee8185611984565b93506119f983611995565b8060005b83811015611a2a578151611a1188826119b4565b9750611a1c836119cc565b9250506001810190506119fd565b5085935050505092915050565b60006020820190508181036000830152611a5181846119d9565b905092915050565b60008115159050919050565b611a6e81611a59565b82525050565b6000602082019050611a896000830184611a65565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ad657607f821691505b602082108103611ae957611ae8611a8f565b5b50919050565b7f43616e6e6f742063726561746520612070726f66696c6520666f72206120736f60008201527f756c207468617420686173206e6f74206265656e206d696e7465640000000000602082015250565b6000611b4b603b83611319565b9150611b5682611aef565b604082019050919050565b60006020820190508181036000830152611b7a81611b3e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611be37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ba6565b611bed8683611ba6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c2a611c25611c20846114bc565b611c05565b6114bc565b9050919050565b6000819050919050565b611c4483611c0f565b611c58611c5082611c31565b848454611bb3565b825550505050565b600090565b611c6d611c60565b611c78818484611c3b565b505050565b5b81811015611c9c57611c91600082611c65565b600181019050611c7e565b5050565b601f821115611ce157611cb281611b81565b611cbb84611b96565b81016020851015611cca578190505b611cde611cd685611b96565b830182611c7d565b50505b505050565b600082821c905092915050565b6000611d0460001984600802611ce6565b1980831691505092915050565b6000611d1d8383611cf3565b9150826002028217905092915050565b611d368261130e565b67ffffffffffffffff811115611d4f57611d4e61154c565b5b611d598254611abe565b611d64828285611ca0565b600060209050601f831160018114611d975760008415611d85578287015190505b611d8f8582611d11565b865550611df7565b601f198416611da586611b81565b60005b82811015611dcd57848901518255600182019150602085019450602081019050611da8565b86831015611dea5784890151611de6601f891682611cf3565b8355505b6001600288020188555050505b505050505050565b6000604082019050611e14600083018561194f565b611e21602083018461194f565b9392505050565b7f536f756c20616c72656164792065786973747300000000000000000000000000600082015250565b6000611e5e601383611319565b9150611e6982611e28565b602082019050919050565b60006020820190508181036000830152611e8d81611e51565b9050919050565b7f536f756c20646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000611eca601383611319565b9150611ed582611e94565b602082019050919050565b60006020820190508181036000830152611ef981611ebd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f69826114bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f9b57611f9a611f2f565b5b600182019050919050565b7f4f6e6c7920757365727320686176652072696768747320746f2064656c65746560008201527f2074686569722070726f66696c65206461746100000000000000000000000000602082015250565b6000612002603383611319565b915061200d82611fa6565b604082019050919050565b6000602082019050818103600083015261203181611ff5565b9050919050565b7f50726f66696c6520646f6573206e6f7420657869737400000000000000000000600082015250565b600061206e601683611319565b915061207982612038565b602082019050919050565b6000602082019050818103600083015261209d81612061565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546120d181611abe565b6120db81866120a4565b945060018216600081146120f6576001811461210b5761213e565b60ff198316865281151582028601935061213e565b612114856120af565b60005b8381101561213657815481890152600182019150602081019050612117565b838801955050505b50505092915050565b600061215382846120c4565b91508190509291505056fea26469706673582212204dec545dc0529630a714c48b1eaad5680c1af26da37e5828ba8910aff403ff1464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806389afcb4411610097578063bdd7520211610066578063bdd7520214610270578063d904176d146102a0578063f2fde38b146102bc578063f5a3317d146102d8576100f5565b806389afcb44146101d65780638da5cb5b146101f257806396367d4c1461021057806399f826a514610240576100f5565b806354588a93116100d357806354588a931461016457806366cfe97f14610180578063715018a6146101b057806386b75fd1146101ba576100f5565b806306fdde03146100fa57806330cff224146101185780634d1dd96914610148575b600080fd5b610102610308565b60405161010f919061139e565b60405180910390f35b610132600480360381019061012d9190611432565b610396565b60405161013f9190611525565b60405180910390f35b610162600480360381019061015d9190611732565b6104d3565b005b61017e60048036038101906101799190611850565b6106e0565b005b61019a60048036038101906101959190611890565b61081e565b6040516101a79190611934565b60405180910390f35b6101b86108a9565b005b6101d460048036038101906101cf9190611850565b6108bd565b005b6101f060048036038101906101eb9190611890565b6109f3565b005b6101fa610c20565b604051610207919061195e565b60405180910390f35b61022a60048036038101906102259190611890565b610c49565b6040516102379190611a37565b60405180910390f35b61025a60048036038101906102559190611890565b610d16565b6040516102679190611934565b60405180910390f35b61028a60048036038101906102859190611890565b610da1565b6040516102979190611a74565b60405180910390f35b6102ba60048036038101906102b59190611432565b610e01565b005b6102d660048036038101906102d19190611890565b610fca565b005b6102f260048036038101906102ed9190611432565b611050565b6040516102ff9190611a74565b60405180910390f35b6004805461031590611abe565b80601f016020809104026020016040519081016040528092919081815260200182805461034190611abe565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b505050505081565b61039e611255565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461043590611abe565b80601f016020809104026020016040519081016040528092919081815260200182805461046190611abe565b80156104ae5780601f10610483576101008083540402835291602001916104ae565b820191906000526020600020905b81548152906001019060200180831161049157829003601f168201915b5050505050815260200160018201548152602001600282015481525050905092915050565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090611b61565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816105eb9190611d2d565b506020820151816001015560408201518160020155905050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa23ac7e4240980962523625b2d1d3aa221354fcc90b374cf0e21685c94288d3e33836040516106d4929190611dff565b60405180910390a15050565b6106e8611102565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590611e74565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050507f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b056582604051610812919061195e565b60405180910390a15050565b610826611276565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6108b1611102565b6108bb6000611189565b565b600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90611ee0565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050507fd456720fd185d4060f5cea4d82775d2af95048c1e10f227ec35bae950a4be2a8826040516109e7919061195e565b60405180910390a15050565b6109fb611102565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160009055505060005b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610be5576000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b0557610b04611f00565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610bbf91906112b1565b600182016000905560028201600090555050508080610bdd90611f5e565b915050610a68565b507fe22de1457cb61fb61b60176bc4235a9abd19466126b46692bc14fc573f09924981604051610c15919061195e565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d0a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610cc0575b50505050509050919050565b610d1e611276565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6000600554600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610df75760009050610dfc565b600190505b919050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6657508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c90612018565b60405180910390fd5b610eaf8282611050565b610eee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee590612084565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610f7b91906112b1565b6001820160009055600282016000905550507fbecbd0337c25e4ba3474143b6f75afd8775e682adad51f00d8f5b0740406fd338282604051610fbe929190611dff565b60405180910390a15050565b610fd2611102565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110445760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161103b919061195e565b60405180910390fd5b61104d81611189565b50565b6000600554600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040516110e19190612147565b6040518091039020036110f757600090506110fc565b600190505b92915050565b61110a61124d565b73ffffffffffffffffffffffffffffffffffffffff16611128610c20565b73ffffffffffffffffffffffffffffffffffffffff16146111875761114b61124d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161117e919061195e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180606001604052806060815260200160008152602001600081525090565b6040518060a0016040528060008019168152602001600080191681526020016000801916815260200160008152602001600080191681525090565b5080546112bd90611abe565b6000825580601f106112cf57506112ee565b601f0160209004906000526020600020908101906112ed91906112f1565b5b50565b5b8082111561130a5760008160009055506001016112f2565b5090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561134857808201518184015260208101905061132d565b60008484015250505050565b6000601f19601f8301169050919050565b60006113708261130e565b61137a8185611319565b935061138a81856020860161132a565b61139381611354565b840191505092915050565b600060208201905081810360008301526113b88184611365565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113ff826113d4565b9050919050565b61140f816113f4565b811461141a57600080fd5b50565b60008135905061142c81611406565b92915050565b60008060408385031215611449576114486113ca565b5b60006114578582860161141d565b92505060206114688582860161141d565b9150509250929050565b600082825260208201905092915050565b600061148e8261130e565b6114988185611472565b93506114a881856020860161132a565b6114b181611354565b840191505092915050565b6000819050919050565b6114cf816114bc565b82525050565b600060608301600083015184820360008601526114f28282611483565b915050602083015161150760208601826114c6565b50604083015161151a60408601826114c6565b508091505092915050565b6000602082019050818103600083015261153f81846114d5565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61158482611354565b810181811067ffffffffffffffff821117156115a3576115a261154c565b5b80604052505050565b60006115b66113c0565b90506115c2828261157b565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156115f1576115f061154c565b5b6115fa82611354565b9050602081019050919050565b82818337600083830152505050565b6000611629611624846115d6565b6115ac565b905082815260208101848484011115611645576116446115d1565b5b611650848285611607565b509392505050565b600082601f83011261166d5761166c6115cc565b5b813561167d848260208601611616565b91505092915050565b61168f816114bc565b811461169a57600080fd5b50565b6000813590506116ac81611686565b92915050565b6000606082840312156116c8576116c7611547565b5b6116d260606115ac565b9050600082013567ffffffffffffffff8111156116f2576116f16115c7565b5b6116fe84828501611658565b60008301525060206117128482850161169d565b60208301525060406117268482850161169d565b60408301525092915050565b60008060408385031215611749576117486113ca565b5b60006117578582860161141d565b925050602083013567ffffffffffffffff811115611778576117776113cf565b5b611784858286016116b2565b9150509250929050565b6000819050919050565b6117a18161178e565b81146117ac57600080fd5b50565b6000813590506117be81611798565b92915050565b600060a082840312156117da576117d9611547565b5b6117e460a06115ac565b905060006117f4848285016117af565b6000830152506020611808848285016117af565b602083015250604061181c848285016117af565b60408301525060606118308482850161169d565b6060830152506080611844848285016117af565b60808301525092915050565b60008060c08385031215611867576118666113ca565b5b60006118758582860161141d565b9250506020611886858286016117c4565b9150509250929050565b6000602082840312156118a6576118a56113ca565b5b60006118b48482850161141d565b91505092915050565b6118c68161178e565b82525050565b60a0820160008201516118e260008501826118bd565b5060208201516118f560208501826118bd565b50604082015161190860408501826118bd565b50606082015161191b60608501826114c6565b50608082015161192e60808501826118bd565b50505050565b600060a08201905061194960008301846118cc565b92915050565b611958816113f4565b82525050565b6000602082019050611973600083018461194f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119ae816113f4565b82525050565b60006119c083836119a5565b60208301905092915050565b6000602082019050919050565b60006119e482611979565b6119ee8185611984565b93506119f983611995565b8060005b83811015611a2a578151611a1188826119b4565b9750611a1c836119cc565b9250506001810190506119fd565b5085935050505092915050565b60006020820190508181036000830152611a5181846119d9565b905092915050565b60008115159050919050565b611a6e81611a59565b82525050565b6000602082019050611a896000830184611a65565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ad657607f821691505b602082108103611ae957611ae8611a8f565b5b50919050565b7f43616e6e6f742063726561746520612070726f66696c6520666f72206120736f60008201527f756c207468617420686173206e6f74206265656e206d696e7465640000000000602082015250565b6000611b4b603b83611319565b9150611b5682611aef565b604082019050919050565b60006020820190508181036000830152611b7a81611b3e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611be37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ba6565b611bed8683611ba6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c2a611c25611c20846114bc565b611c05565b6114bc565b9050919050565b6000819050919050565b611c4483611c0f565b611c58611c5082611c31565b848454611bb3565b825550505050565b600090565b611c6d611c60565b611c78818484611c3b565b505050565b5b81811015611c9c57611c91600082611c65565b600181019050611c7e565b5050565b601f821115611ce157611cb281611b81565b611cbb84611b96565b81016020851015611cca578190505b611cde611cd685611b96565b830182611c7d565b50505b505050565b600082821c905092915050565b6000611d0460001984600802611ce6565b1980831691505092915050565b6000611d1d8383611cf3565b9150826002028217905092915050565b611d368261130e565b67ffffffffffffffff811115611d4f57611d4e61154c565b5b611d598254611abe565b611d64828285611ca0565b600060209050601f831160018114611d975760008415611d85578287015190505b611d8f8582611d11565b865550611df7565b601f198416611da586611b81565b60005b82811015611dcd57848901518255600182019150602085019450602081019050611da8565b86831015611dea5784890151611de6601f891682611cf3565b8355505b6001600288020188555050505b505050505050565b6000604082019050611e14600083018561194f565b611e21602083018461194f565b9392505050565b7f536f756c20616c72656164792065786973747300000000000000000000000000600082015250565b6000611e5e601383611319565b9150611e6982611e28565b602082019050919050565b60006020820190508181036000830152611e8d81611e51565b9050919050565b7f536f756c20646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000611eca601383611319565b9150611ed582611e94565b602082019050919050565b60006020820190508181036000830152611ef981611ebd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f69826114bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f9b57611f9a611f2f565b5b600182019050919050565b7f4f6e6c7920757365727320686176652072696768747320746f2064656c65746560008201527f2074686569722070726f66696c65206461746100000000000000000000000000602082015250565b6000612002603383611319565b915061200d82611fa6565b604082019050919050565b6000602082019050818103600083015261203181611ff5565b9050919050565b7f50726f66696c6520646f6573206e6f7420657869737400000000000000000000600082015250565b600061206e601683611319565b915061207982612038565b602082019050919050565b6000602082019050818103600083015261209d81612061565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546120d181611abe565b6120db81866120a4565b945060018216600081146120f6576001811461210b5761213e565b60ff198316865281151582028601935061213e565b612114856120af565b60005b8381101561213657815481890152600182019150602081019050612117565b838801955050505b50505092915050565b600061215382846120c4565b91508190509291505056fea26469706673582212204dec545dc0529630a714c48b1eaad5680c1af26da37e5828ba8910aff403ff1464736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 199,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "identities",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Identity)187_storage)"
      },
      {
        "astId": 206,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "identityProfiles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Profile)194_storage))"
      },
      {
        "astId": 211,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "profiles",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 213,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 219,
        "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
        "label": "zeroHash",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Profile)194_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct UNIVERSAL_ID.Profile))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Profile)194_storage)"
      },
      "t_mapping(t_address,t_struct(Identity)187_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UNIVERSAL_ID.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)187_storage"
      },
      "t_mapping(t_address,t_struct(Profile)194_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UNIVERSAL_ID.Profile)",
        "numberOfBytes": "32",
        "value": "t_struct(Profile)194_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)187_storage": {
        "encoding": "inplace",
        "label": "struct UNIVERSAL_ID.Identity",
        "members": [
          {
            "astId": 178,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "UID",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 180,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "firstNameHash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 182,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "lastNameHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 184,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "dobHash",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "phone",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Profile)194_storage": {
        "encoding": "inplace",
        "label": "struct UNIVERSAL_ID.Profile",
        "members": [
          {
            "astId": 189,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "entity",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 191,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "dataHash",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 193,
            "contract": "contracts/UNIVERSAL_ID.sol:UNIVERSAL_ID",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}